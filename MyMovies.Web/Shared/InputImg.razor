@using System.IO;
@using Blazor.FileReader;
@inject IFileReaderService fileReaderService;
<div>
    <label>
        @label
    </label>
    <div>
      <input  type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png"/>
    </div>
</div>

<div>
    @if (imageBase64 != null)
    {
        <div>
            <div style="margin:10px">
                <img src="data:image/jpeg;base64, @imageBase64" style="width:400px" />
            </div>
        </div>
    }

    @if (imageTemporal != null)
    {
        <div>
            <div style="margin:10px">
                <img scr="@imageTemporal" style="width:400px;" />
            </div>
        </div>
    }

</div>
@code {
    [Parameter] public string label { get; set; } = "Imagen";
    [Parameter] public string imageTemporal { get; set; }
    [Parameter] public EventCallback<string> imageSelected { get; set; }
    private string imageBase64;
    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach(var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream =await file.CreateMemoryStreamAsync(4*1024))
            {
                var bytesImage = new byte[memoryStream.Length];
                memoryStream.Read(bytesImage,0,(int)memoryStream.Length);
                imageBase64 = Convert.ToBase64String(bytesImage);
                await imageSelected.InvokeAsync(imageBase64);
                imageTemporal = null;
                StateHasChanged();
            }
        }
    }
}
